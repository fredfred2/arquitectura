<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.6hudson-86  svn-revision#12773. --><xs:schema xmlns:tns="http://ejbs/" xmlns:ns1="urn:dukesdecks" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://ejbs/">

<xs:import namespace="urn:dukesdecks" schemaLocation="http://localhost:7001/CardDeckSessionBean/CardDeckSessionBeanService?xsd=1"/>

<xs:element name="createDeck" type="tns:createDeck"/>

<xs:element name="createDeckResponse" type="tns:createDeckResponse"/>

<xs:element name="deleteDeck" type="tns:deleteDeck"/>

<xs:element name="deleteDeckResponse" type="tns:deleteDeckResponse"/>

<xs:element name="getDeck" type="tns:getDeck"/>

<xs:element name="getDeckResponse" type="tns:getDeckResponse"/>

<xs:element name="listDeckIds" type="tns:listDeckIds"/>

<xs:element name="listDeckIdsResponse" type="tns:listDeckIdsResponse"/>

<xs:element name="shuffleDeck" type="tns:shuffleDeck"/>

<xs:element name="shuffleDeckResponse" type="tns:shuffleDeckResponse"/>

<xs:complexType name="shuffleDeck">
<xs:sequence>
<xs:element name="arg0" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="shuffleDeckResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="createDeck">
<xs:sequence>
<xs:element name="arg0" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="createDeckResponse">
<xs:sequence>
<xs:element name="return" type="xs:int" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteDeck">
<xs:sequence>
<xs:element name="arg0" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteDeckResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="listDeckIds">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="listDeckIdsResponse">
<xs:sequence>
<xs:element name="return" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getDeck">
<xs:sequence>
<xs:element name="arg0" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getDeckResponse">
<xs:sequence>
<xs:element name="return" type="ns1:stackType" minOccurs="0"/>
</xs:sequence>
</xs:complexType>
</xs:schema>